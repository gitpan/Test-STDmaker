Title Page
     Software Version Description

     for

     Test::STDmaker - Test Scripts, Demo Scripts and Software Test Description (STD) Automation

     Revision: D

     Version: 0.05

     Date: 2003/07/05

     Prepared for: General Public 

     Prepared by:  SoftwareDiamonds.com E<lt>support@SoftwareDiamonds.comE<gt>

     Copyright: copyright © 2003 Software Diamonds

     Classification: NONE

1.0 SCOPE
    This paragraph identifies and provides an overview of the released
    files.

  1.1 Identification

    This release, identified in 3.2, is a collection of Perl modules that
    extend the capabilities of the Perl language.

  1.2 System overview

    The system is the Perl programming language software. As established by
    the Perl referenced documents, the "Test::STDmaker" program module
    extends the Perl language.

    The input to "Test::STDmaker" is the __DATA__ section of Software Test
    Description (STD) program module. The __DATA__ section must contain STD
    forms text database in the DataPort::FileType::DataDB format.

    The STD program modules should reside in a 't' subtree whose root is the
    same as the 'lib' subtree.

    For example,

     root_dir   
       lib
         MyTopLevel
           MyUnitUnderTest.pm  # code module
       t
         MyTopLevel
           MyUnitUnderTest.pm  # std module

    When "Test::STDmaker" searches for a STD program module, it looks for it
    first under all the subtrees in @INC with the last directory removed.
    This means the package name must start with "t::". Thus the program
    module name for the Unit Under Test (UUT) and the UUT STD program module
    are always different.

    Use the "tg.pl" (test generate) cover script for Test::STDmaker to
    process a STD database module as follows:

      tg t::MyTopLevel::MyUnitUnderTest
      perl -d root_dir/t/MyTopLevel/MyUnitUnderTest.t
      perl -d root_dir/t/MyTopLevel/MyUnitUnderTest.d

    Using the data in the database, the "Test::STDmaker" module provides the
    following:

    1   Automate Perl related programming needed to create a test script
        resulting in reduction of time and cost.

    2   Translate a short hand Software Test Description (STD) file into a
        Perl test script that eventually makes use of the "Test" module via
        added capabilities of the "Test::Tech module.

    3   Translate the sort hand STD data file into a Perl demo script that
        demonstrates the features of the the module under test.

    4   Replace the POD of a the STD file with the __DATA__ formDB text
        database, information required by a US Department of Defense (DOD)
        Software Test Description (STD) Data Item Description (DID).

    5   Automate generation of test information required by (STD2167A) from
        the STD file making it economical to provide this information for
        even commercial projects. The ISO standards and certification are
        pushing commercial projects more and more toward using 2167
        nomenclature and providing STD2167A information.

    See the Test::STDmaker POD for further detail on the text database
    fields and the processing.

    The "Test::STDmaker" program module is a high level use infterface
    (functional interface) program module in the US DOD STD2167A bundle. The
    dependency of the program modules in the US DOD STD2167A bundle is as
    follows:

     File::Package File:SmartNL File::TestPath Text::Scrub

         Test::Tech

            DataPort::FileType::FormDB DataPort::DataFile DataPort::Maker 
            File::AnySpec File::Data File::PM2File File::SubPM Text::Replace 
            Text::Column

                Test::STDmaker ExtUtils::SVDmaker

  1.3 Document overview.

    This document releases Test::STDmaker version 0.05 providing description
    of the inventory, installation instructions and other information
    necessary to utilize and track this release.

3.0 VERSION DESCRIPTION
    All file specifications in this SVD use the Unix operating system file
    specification.

  3.1 Inventory of materials released.

    This document releases the file found at the following repository(s):

       http://www.softwarediamonds/packages/Test-STDmaker-0.05
       http://www.perl.com/CPAN-local/authors/id/S/SO/SOFTDIA/Test-STDmaker-0.05

    Restrictions regarding duplication and license provisions are as
    follows:

    Copyright.
        copyright © 2003 Software Diamonds

    Copyright holder contact.
         603 882-0846 E<lt>support@SoftwareDiamonds.comE<gt>

    License.
        These files are a POD derived works from the hard copy public domain
        version freely distributed by the United States Federal Government.

        The original hardcopy version is always the authoritative document
        and any conflict between the original hardcopy version governs
        whenever there is any conflict. In more explicit terms, any conflict
        is a transcription error in converting the origninal hard-copy
        version to this POD format. Software Diamonds assumes no responsible
        for such errors.

        Software Diamonds permits the redistribution and use in source and
        binary forms, with or without modification, provided that the
        following conditions are met:

        1   Redistributions of source code, modified or unmodified must
            retain the above copyright notice, this list of conditions and
            the following disclaimer.

        2   Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials provided
            with the distribution.

        SOFTWARE DIAMONDS, http://www.SoftwareDiamonds.com, PROVIDES THIS
        SOFTWARE 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
        BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
        FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
        SOFTWARE DIAMONDS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
        SPECIAL,EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
        LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
        USE,DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
        ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING USE OF THIS SOFTWARE, EVEN IF ADVISED OF
        NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE POSSIBILITY
        OF SUCH DAMAGE.

  3.2 Inventory of software contents

    The content of the released, compressed, archieve file, consists of the
    following files:

     file                                                         version date       comment
     ------------------------------------------------------------ ------- ---------- ------------------------
     lib/Docs/Site_SVD/Test_STDmaker.pm                           0.05    2003/07/05 revised 0.04
     MANIFEST                                                     0.05    2003/07/05 generated, replaces 0.04
     Makefile.PL                                                  0.05    2003/07/05 generated, replaces 0.04
     README                                                       0.05    2003/07/05 generated, replaces 0.04
     lib/Test/STDmaker.pm                                         1.08    2003/07/05 revised 1.07
     lib/Test/STDType/Demo.pm                                     1.06    2003/07/05 unchanged
     lib/Test/STDType/STD.pm                                      1.07    2003/07/05 revised 1.06
     lib/Test/STDType/Verify.pm                                   1.06    2003/07/04 unchanged
     lib/Test/STD/Check.pm                                        1.06    2003/07/04 unchanged
     lib/Test/STD/FileGen.pm                                      1.06    2003/07/05 unchanged
     lib/Test/STD/STD2167.pm                                      1.04    2003/07/05 unchanged
     lib/Test/STD/STDgen.pm                                       1.04    2003/07/05 revised 1.03
     t/Test/STDmaker/FileGenI.pm                                  1.02    2003/06/14 unchanged
     t/Test/STDmaker/STDmaker.d                                   0.01    2003/07/05 unchanged
     t/Test/STDmaker/STDmaker.pm                                  0.05    2003/07/05 revised 0.04
     t/Test/STDmaker/STDmaker.t                                   0.01    2003/07/05 unchanged
     t/Test/STDmaker/tg0.pm                                       0.02    2003/06/14 unchanged
     t/Test/STDmaker/tg2.pm                                       0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgA0.pm                                      0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgA1.pm                                      0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgA2.pm                                      0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgA2A.txt                                    0.03    2003/06/21 unchanged
     t/Test/STDmaker/tgA2B.txt                                    0.04    2003/07/04 unchanged
     t/Test/STDmaker/tgA2C.txt                                    0.05    2003/07/04 unchanged
     t/Test/STDmaker/tgA2D.txt                                    0.02    2003/06/05 unchanged
     t/Test/STDmaker/tgB0n.pm                                     0.01    2003/06/21 unchanged
     t/Test/STDmaker/tgB0s.pm                                     0.01    2003/06/21 unchanged
     t/Test/STDmaker/tgB1.pm                                      0.01    2003/06/07 unchanged
     t/Test/STDmaker/tgB2n.pm                                     0.01    2003/06/21 unchanged
     t/Test/STDmaker/tgB2n.txt                                    0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgB2s.pm                                     0.01    2003/06/21 unchanged
     t/Test/STDmaker/tgB2s.txt                                    0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgC0.pm                                      0.02    2003/06/21 unchanged
     t/Test/STDmaker/tgC1.pm                                      0.01    2003/06/07 unchanged
     t/Test/STDmaker/tgC2.pm                                      0.02    2003/06/21 unchanged
     bin/tmake.pl                                                 1.04    2003/07/05 unchanged

  3.3 Changes

    Changes are as follows:

    STD::STDgen 0.01
        This is the original release. There are no previous releases to
        change.

    STD::STDgen 0.02
        t/STD/tgA0.std changes
            Added test for DO: field

            Added test for VO: field

            Added a loop around two A: and E: fields.

        STD/TestGen.pm changes
            Added requirements for DO: VO: and looping a test

        STD/Check.pm changes
            Added and revise code to make DO: VO: and looping work

        STD/Verify.pm changes
            Added and revise code to make DO: VO: and looping work

    Test::STDmaker 0.01
        *   Low level subroutines are broken out as separate distribution
            modules: Test::TestUtil Test::Tech DataPort::FileType::FormDB
            DataPort::DataFile

        *   The STD::STDgen was renamed Test::STDmaker to comply with CPAN
            directives to use existing top levels whenever possible.

    Test::STDmaker 0.02
        Replaced using Test::TestUtil with File::FileUtil, Test::STD::Scrub,
        Test::STD::STDutil

        Added tests to deal with the fact that Data::Dumper produces
        different results on different Perls

        Added "Test" and "Data::Dumper" modules to the t directory so there
        are no surprises because of Test versions.

        Changed the generated test script to use subroutine interface of
        "Test::Tech" The object interface was removed.

    Test::STDmaker 0.03
        Make the same additions to @INC for "Test::STDtype::Demo" and
        "Test::STD::Check" as for "Test::STDtype::Verify".

        Changed from using "File::FileUtil" (disappeared) to the File::*
        modules broken out from "File::FileUtil"

    Test::STDmaker 0.04
        Changed from using "Test::STD::STDutil" (disappeared) to the File::*
        modules broken out from "Test::STD::STDutil"

        Added the -options_pm option and the ability to make multiple tests
        from a file list.

    Test::STDmaker 0.05
        Chnage name of Test::Table to Test::Column. Test::Table taken.

  3.4 Adaptation data.

    This installation requires that the installation site has the Perl
    programming language installed. Installation sites running Microsoft
    Operating systems require the installation of Unix utilities. An
    excellent, highly recommended Unix utilities for Microsoft operating
    systems is unxutils by Karl M. Syring. A copy is available at the
    following web sites:

     http://unxutils.sourceforge.net
     http://packages.SoftwareDiamnds.com

    There are no other additional requirements or tailoring needed of
    configurations files, adaptation data or other software needed for this
    installation particular to any installation site.

  3.5 Related documents.

    There are no related documents needed for the installation and test of
    this release.

  3.6 Installation instructions.

    Instructions for installation, installation tests and installation
    support are as follows:

    Installation Instructions.
        To installed the release file, use the CPAN module in the Perl
        release or the INSTALL.PL script at the following web site:

         http://packages.SoftwareDiamonds.com

        Follow the instructions for the the chosen installation software.

        The distribution file is at the following respositories:

           http://www.softwarediamonds/packages/Test-STDmaker-0.05
           http://www.perl.com/CPAN-local/authors/id/S/SO/SOFTDIA/Test-STDmaker-0.05

    Prerequistes.
         'DataPort::DataFile' => '0.02',
         'DataPort::FileType::FormDB' => '0.02',
         'DataPort::Maker' => '0',
         'Test::Tech' => '1.08',
         'Text::Scrub' => '0',
         'Text::Replace' => '0',
         'Text::Column' => '0',
         'File::AnySpec' => '0',
         'File::TestPath' => '0',
         'File::SubPM' => '0',
         'File::PM2File' => '0',
         'File::SmartNL' => '0',
         'File::Package' => '0',
         'File::Data' => '0',

    Security, privacy, or safety precautions.
        None.

    Installation Tests.
        Most Perl installation software will run the following test
        script(s) as part of the installation:

         t/Test/STDmaker/STDmaker.t

    Installation support.
        If there are installation problems or questions with the
        installation contact

         603 882-0846 E<lt>support@SoftwareDiamonds.comE<gt>

  3.7 Possible problems and known errors

    The open issues are as follows:

    *   The STD2167 option, for a full singe STD, instead of a detailed STD
        with a general STD, is commented out.

    *   There is no requirement tracebility to a particular line in a file
        containing the expected results

    *   There is no provisions for Software Development Document (SDD)
        design requirements and tracing functional requirements to design
        requirements and to design requirements tests

    *   Functional requirements are basically requirements important to the
        end-user and stated for the point of view of the end-user. Test
        coverage is not an issue. However, when design requirements are
        added to the mix, test coverage of the design requirements becomes
        important. Test coverage means as a minimum, the tests causes the
        execution of all paths in the software under test.

4.0 NOTES
    The following are useful acronyms:

    .d  extension for a Perl demo script file

    .pm extension for a Perl Library Module

    .t  extension for a Perl test script file

    DID Data Item Description

    POD Plain Old Documentation

    STD Software Test Description

    SVD Software Version Description

2.0 SEE ALSO
    Modules with end-user functional interfaces relating to US DOD 2167A
    automation are as follows:

    Test::STDmaker
    ExtUtils::SVDmaker
    DataPort::FileType::FormDB
    DataPort::DataFile
    Test::Tech
    Test
    Data::Dumper
    Test::STD::Scrub
    Test::STD::STDutil
    File::FileUtil
    The design modules for Test::STDmaker have no other conceivable use then
    to support the Test::STDmaker functional interface. The Test::STDmaker
    design module are as follows:

    Test::STD::Check
    Test::STD::FileGen
    Test::STD::STD2167
    Test::STD::STDgen
    Test::STDtype::Demo
    Test::STDtype::STD
    Test::STDtype::Verify
    Some US DOD 2167A Software Development Standard, DIDs and other related
    documents that complement the US DOD 2167A automation are as follows:

    US DOD Software Development Standard
    US DOD Specification Practices
    Computer Operation Manual (COM) DID
    Computer Programming Manual (CPM) DID)
    Computer Resources Integrated Support Document (CRISD) DID
    Computer System Operator's Manual (CSOM) DID
    Database Design Description (DBDD) DID
    Engineering Change Proposal (ECP) DID
    Firmware support Manual (FSM) DID
    Interface Design Document (IDD) DID
    Interface Requirements Specification (IRS) DID
    Operation Concept Description (OCD) DID
    Specification Change Notice (SCN) DID
    Software Design Specification (SDD) DID
    Software Development Plan (SDP) DID
    Software Input and Output Manual (SIOM) DID
    Software Installation Plan (SIP) DID
    Software Programmer's Manual (SPM) DID
    Software Product Specification (SPS) DID
    Software Requirements Specification (SRS) DID
    System or Segment Design Document (SSDD) DID
    System or Subsystem Specification (SSS) DID
    Software Test Description (STD) DID
    Software Test Plan (STP) DID
    Software Test Report (STR) DID
    Software Transition Plan (STrP) DID
    Software User Manual (SUM) DID
    Software Version Description (SVD) DID
    Version Description Document (VDD) DID
